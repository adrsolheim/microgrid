version: '3'
services:
  keycloakdb:
    container_name: mariadb_keycloak
    image: mariadb:10.11
    ports:
      - 3307:3307
    environment:
      - MYSQL_USER=keycloak
      - MYSQL_PASSWORD=keycloak
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=keycloak
      - MYSQL_TCP_PORT=3307
    restart: always
    volumes:
      - ./mariadb-keycloak:/var/lib/mysql
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:21.0.0
    command: ["start-dev", "--import-realm", "--log-level=INFO", "--http-port=8082", "--hostname=keycloak"]
    environment:
      DB_VENDOR: mariadb
      DB_ADDR: keycloakdb
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_ISSUER_URI: http://keycloak:8082
      KEYCLOAK_FRONTEND_URL: http://keycloak:8082
      KEYCLOAK_ENABLED: "true"
    ports:
      - 8082:8082
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloakdb

  blogdb:
    image: mariadb:10.11
    container_name: blogdb
    ports:
      - 3306:3306
    environment:
      MYSQL_USER: spring
      MYSQL_PASSWORD: spring
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: blogpost
    restart: always
    volumes:
      # kafka connect:
      # should be run *once* to create debezium user for
      - ./configs/blogdb/debezium-user.sql:/initial/create-debezium-user.sql
      - ./configs/blogdb/config:/etc/mysql/my.cnf
      - ./mariadb-blog:/var/lib/mysql
  blog-service:
    container_name: blog-service
    image: blog_service:latest
    build: ./blog-service
    #pull_policy: always
    restart: on-failure
    ports:
      - 8081:8081
    environment:
      DATABASE_HOST: blogdb
      KAFKA_BOOTSTRAP_SERVERS: broker:29092
    depends_on:
      - blogdb
      - zookeeper
      - broker

  commentdb:
    image: mariadb:10.11
    container_name: commentdb
    ports:
      - 3308:3308
    environment:
      MYSQL_USER: spring
      MYSQL_PASSWORD: spring
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: comment
      MYSQL_TCP_PORT: 3308
    restart: always
    volumes:
      - ./mariadb-comment:/var/lib/mysql
  comment-service:
    container_name: comment-service
    image: comment_service:latest
    build: ./comment-service
    #pull_policy: always
    restart: on-failure
    ports:
      - 8083:8083
    environment:
      DATABASE_HOST: commentdb
      DATABASE_PORT: 3308
      KAFKA_BOOTSTRAP_SERVERS: broker:29092
    depends_on:
      - commentdb
      - zookeeper
      - broker

  zookeeper:
    # TODO: add persistent volumes?
    # /var/lib/{zookeeper,mzdata}
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.2
    container_name: schema-registry
    restart: always
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29092"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
    ports:
      - 8085:8085

  broker:
    # TODO: add persistent volumes?
    # /var/lib/kafka
    image: confluentinc/cp-server:7.3.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_ADVERTISED_HOSTNAME: broker
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8085
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  kafka-connect:
    image: kafka-connect:latest
    container_name: kafka-connect
    build:
        context: ./kafka-connect
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
      CONNECT_GROUP_ID: connectadrsolheim
      CONNECT_CONFIG_STORAGE_TOPIC: connect_config
      CONNECT_OFFSET_STORAGE_TOPIC: connect_offset
      CONNECT_STATUS_STORAGE_TOPIC: connect_status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      #CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      #CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/etc/kafka-connect/jars"
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8085
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8085
    ports:
      - 8084:8083
    volumes:
      - ./kafka-connect/jars:/etc/kafka-connect/jars
    depends_on:
      - schema-registry
      - broker
      - zookeeper

  api-gateway:
    image: api_gateway:latest
    container_name: api-gateway
    build: api-gateway
    #pull_policy: always
    restart: on-failure
    ports:
      - 8080:8080
    environment:
      BLOG_SERVICE_URL: http://blog-service:8081
      COMMENT_SERVICE_URL: http://comment-service:8083
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_ISSUER_URI: http://keycloak:8082
    depends_on:
      - commentdb
      - blogdb
      - comment-service
      - blog-service
