spring.application.name=api-gateway
spring.cloud.gateway.httpclient.wiretap=true
spring.cloud.gateway.httpserver.wiretap=true

# blog service route
spring.cloud.gateway.routes[0].id=blog-service
spring.cloud.gateway.routes[0].uri=${BLOG_SERVICE_URL:http://localhost:8081}
spring.cloud.gateway.routes[0].predicates[0]=Method=GET,POST
spring.cloud.gateway.routes[0].predicates[1]=Path=/api/blogpost/*

# blog service route
spring.cloud.gateway.routes[1].id=comment-service
spring.cloud.gateway.routes[1].uri=${COMMENT_SERVICE_URL:http://localhost:8083}
spring.cloud.gateway.routes[1].predicates[0]=Method=GET,POST
spring.cloud.gateway.routes[1].predicates[1]=Path=/api/comment/*

# keycloak properties
spring.security.oauth2.client.provider.spring-client-provider.issuer-uri=${KEYCLOAK_ISSUER_URI}/realms/microgrid-realm
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI}/realms/microgrid-realm

spring.security.oauth2.client.registration.gateway.provider=spring-client-provider
spring.security.oauth2.client.registration.gateway.client-id=spring-client
spring.security.oauth2.client.registration.gateway.client-secret=tUj1ZsWcpF4CA770C6XulFFUscV8ISCO
spring.security.oauth2.client.registration.gateway.scope=openid, profile, roles
spring.security.oauth2.client.registration.gateway.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.gateway.redirect-uri=http://localhost:8080/login/oauth2/code/spring-client

#keycloak.enabled=${KEYCLOCK_ENABLED:false}

logging.level.reactor.netty=INFO
logging.level.org.springframework.cloud.gateway=TRACE